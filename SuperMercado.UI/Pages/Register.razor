@attribute [Route(Rutas.Register)]
@layout LoginLayout
@inject NavigationManager NavigationManager

<section class="vh-100 gradient-custom">
    <div class="container py-5 h-100">
        <div class="row justify-content-center align-items-center h-100">
            <div class="col-12 col-lg-9 col-xl-7">
                <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
                    <div class="card-body p-4 p-md-5">
                        <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Registrarse</h3>
                        <EditForm Model="NuevoUsuario" OnValidSubmit="Registrar">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-md-12 mb-4">

                                    <div class="form-outline">
                                        <label class="form-label" for="Usuario">Nombre</label>
                                        <InputText id="Nombre" class="form-control form-control-lg" autocomplete="off" @bind-Value="NuevoUsuario.Nombre" />
                                        <ValidationMessage For="()=> NuevoUsuario.Nombre" />
                                    </div>

                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12 mb-4">
                                    <div class="form-outline">
                                        <label class="form-label" for="Contraseña">Apellido</label>
                                        <InputText id="Apellido" class="form-control form-control-lg" autocomplete="off" @bind-Value="NuevoUsuario.Apellido" />
                                        <ValidationMessage For="()=> NuevoUsuario.Apellido" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 mb-4">

                                    <div class="form-outline">
                                        <label class="form-label" for="Usuario">Usuario</label>
                                        <InputText id="Usuario" class="form-control form-control-lg" autocomplete="off" @bind-Value="NuevoUsuario.Username" />
                                        <ValidationMessage For="()=> NuevoUsuario.Username" />
                                    </div>

                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12 mb-4">
                                    <div class="form-outline">
                                        <label class="form-label" for="Contraseña">Contraseña</label>
                                        <InputText type="password" id="Contraseña" class="form-control form-control-lg" autocomplete="off" @bind-Value="NuevoUsuario.Password" />
                                        <ValidationMessage For="()=> NuevoUsuario.Password" />
                                    </div>
                                </div>
                            </div>

                            <div class="mt-4 pt-2 row">
                                <button type="submit" class="btn btn-primary btn-lg btn-block">
                                    Registrar
                                </button>
                            </div>

                            <div class="row">
                                <div class="mt-4 pt-2 row">
                                    <a style="cursor: pointer; text-decoration: underline; color: blue" @onclick="() => NavigationManager.NavigateTo(Rutas.Login)">Si ya tiene una cuenta toque aqui</a>
                                </div>
                            </div>

                            @if (!seCreo)
                            {
                                <div class="row mt-4 alert alert-danger">
                                    @mensaje
                                </div>
                            }

                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private UsuarioDTO NuevoUsuario;
    private UsuarioBLL UsuarioBLL;
    public Register()
    {
        NuevoUsuario = new UsuarioDTO();
        UsuarioBLL = new UsuarioBLL();
    }
    public string mensaje = "";
    public bool seCreo = true;
    private void Registrar()
    {
        (bool resultado, string mensajeSolicitud, Usuario? usuarioCreado) = UsuarioBLL.RegistrarUsuario(new Usuario()
            {
                Nombre = NuevoUsuario.Nombre,
                Apellido = NuevoUsuario.Apellido,
                Username = NuevoUsuario.Username,
                Password = NuevoUsuario.Password
            });
        seCreo = resultado;

        if (resultado)
        {
            //logica de claims
        }
        else
        {
            this.mensaje = mensajeSolicitud;
        }
    }
}

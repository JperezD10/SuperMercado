@attribute [Route(Rutas.Bitacora)]
@attribute [Authorize]

<PageTitle>Supermercado | Bitacora</PageTitle>
<h1>Bitacora</h1>

<EditForm Model="bitacoraDTO" OnSubmit="FiltrarBitacora">
    <div class="row">
        <div class="col-4">
            <InputDate class="form-control" max="@DateTime.Now.ToString("yyyy-MM-dd")" @bind-Value="bitacoraDTO.FechaDesde" />
        </div>
        <div class="col-4">
            <InputDate class="form-control" max="@DateTime.Now.ToString("yyyy-MM-dd")" @bind-Value="bitacoraDTO.FechaHasta" />
        </div>
        <div class="col-4">
            <button type="submit" class="btn btn-primary">
                Filtrar
            </button>
        </div>
    </div>
</EditForm>

@if(!CorrectModel)
{
    <div class="alert alert-danger" role="alert">
        @mensajeError
    </div>
}


<table class="table">
    <thead>
        <tr>
            <th scope="col">Descripcion</th>
            <th scope="col">Fecha</th>
            <th scope="col">Usuario</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var registro in RegistrosBitacora)
        {
            <tr>
                <td>@registro.Descripcion</td>
                <td>@registro.Fecha</td>
                <td>@registro.UsuarioAccion</td>
            </tr>
        }
    </tbody>
</table>


@code {
    private BitacoraDTO bitacoraDTO;
    private IList<Bitacora> RegistrosBitacora;
    BitacoraBLL bitacoraBLL;
    private bool CorrectModel = true;
    private string mensajeError = "";
    public BitacoraPage()
    {
        bitacoraDTO = new() { FechaDesde = DateTime.Now.Date, FechaHasta = DateTime.Now.Date };
        bitacoraBLL = new();
    }
    protected override void OnInitialized()
    {
        RegistrosBitacora = bitacoraBLL.ObtenerBitacora(null, null);
    }

    private void FiltrarBitacora()
    {
        if (bitacoraDTO.FechaDesde > bitacoraDTO.FechaHasta)
        {
            CorrectModel = false;
            mensajeError = "La fecha de inicio no puede ser mayor a la fecha de fin";
        }
        else
        {
            CorrectModel = true;
            RegistrosBitacora = bitacoraBLL.ObtenerBitacora(bitacoraDTO.FechaDesde, bitacoraDTO.FechaHasta);
        }
    }
}
